{
	"name": "C++",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "./Dockerfile",
	// "build": {
	// 	"dockerfile": "Dockerfile",
	// },
	// Set *default* container specific settings.json values on container create.
	"settings": {},
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"-e",
		"DISPLAY=${env:DISPLAY}",
	],
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools",
		"ms-vscode.cpptools-themes",
		"wmaurer.change-case",
		"ms-vscode.cmake-tools",
		"ms-python.python",
		"jeff-hykin.better-cpp-syntax",
		"gruntfuggly.todo-tree",
		"xaver.clang-format"
	],
	"mounts": [
		"source=${localWorkspaceFolder}/../thirdparty,target=/workspaces/thirdparty,type=bind,consistency=cached",
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		// 9798,
		// 9101,
		// 8080
	],
	"appPort" :[
		"8080:8080"
	],
	"portsAttributes": {
		"9798": {
			"label": "udp:9798"
		}
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}